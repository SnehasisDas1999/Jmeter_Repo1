<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_CurrentDate" elementType="Argument">
            <stringProp name="Argument.name">p_CurrentDate</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_Url" elementType="Argument">
            <stringProp name="Argument.name">p_Url</stringProp>
            <stringProp name="Argument.value">pstupqacus01.pstechnology.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_screenProfileName" elementType="Argument">
            <stringProp name="Argument.name">p_screenProfileName</stringProp>
            <stringProp name="Argument.value">${__RandomString(8,ABCDEFGHIJKLMMNOPQ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_description" elementType="Argument">
            <stringProp name="Argument.name">p_description</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,ABCDEFGHIJKLMMNOPQ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_screenProfileName" elementType="Argument">
            <stringProp name="Argument.name">p_screenProfileName</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,ABCDEFGHIJKLMMNOPQ1234567890)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_CurrentDate" elementType="Argument">
            <stringProp name="Argument.name">p_CurrentDate</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_RosterCode" elementType="Argument">
            <stringProp name="Argument.name">p_RosterCode</stringProp>
            <stringProp name="Argument.value">${__RandomString(3,ABCDEFGHIJKLMMNOPQRSTWXYZ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_EmpId" elementType="Argument">
            <stringProp name="Argument.name">p_EmpId</stringProp>
            <stringProp name="Argument.value">${__RandomString(9,0123456789)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_FName" elementType="Argument">
            <stringProp name="Argument.name">p_FName</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,ABCDEFGHIJKLMMNOPQRSTWXYZ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_LName" elementType="Argument">
            <stringProp name="Argument.name">p_LName</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,ABCDEFGHIJKLMMNOPQRSTWXYZ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_Url" elementType="Argument">
            <stringProp name="Argument.name">p_Url</stringProp>
            <stringProp name="Argument.value">pstupqacus01.pstechnology.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_TrainId" elementType="Argument">
            <stringProp name="Argument.name">p_TrainId</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,ABCDEFGHIJKLMMNOPQRSTWXYZ)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_TrainIdNum" elementType="Argument">
            <stringProp name="Argument.name">p_TrainIdNum</stringProp>
            <stringProp name="Argument.value">${__RandomString(4,0123456789)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">2</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">2</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create User">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/add-user</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;${__RandomString(8,ABCDEFGHIJKLMMNOPQRSTUVWXYZ0123456789)}&quot;,&#xd;
  &quot;lastName&quot;: &quot;${__RandomString(8,ABCDEFGHIJKLMMNOPQRSTUVWXYZ0123456789)}&quot;,&#xd;
  &quot;userId&quot;: &quot;${__RandomString(6,ABCDEFGHIJKLMMNOPQRSTUVWXYZ0123456789)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create Screen Profile">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/create-screen-profile</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;screenProfileName&quot;: &quot;${__RandomString(8,ABCDEFGHIJKLMMNOPQRSTUVWXYZ)}&quot;,&#xd;
  &quot;description&quot;: &quot;${__RandomString(8,ABCDEFGHIJKLMMNOPQRSTUVWXYZ)}&quot;,&#xd;
  &quot;module&quot;: {&#xd;
    &quot;orgStructureOId&quot;: 3,&#xd;
    &quot;organizationName&quot;: &quot;SCRT&quot;,&#xd;
    &quot;organizationDescription&quot;: &quot;Security&quot;&#xd;
  },&#xd;
  &quot;screenType&quot;: {&#xd;
    &quot;orgStructureOId&quot;: 15,&#xd;
    &quot;parentOrgStructureOid&quot;: 3,&#xd;
    &quot;organizationName&quot;: &quot;SCRNPROF&quot;,&#xd;
    &quot;organizationDescription&quot;: &quot;Screen Profile&quot;,&#xd;
    &quot;moduleName&quot;: &quot;SCRNPROF&quot;&#xd;
  },&#xd;
  &quot;capabilityMappings&quot;: [&#xd;
    {&#xd;
      &quot;capability&quot;: {&#xd;
        &quot;orgStructureOId&quot;: 15,&#xd;
        &quot;organizationName&quot;: &quot;SCRNPROF&quot;,&#xd;
        &quot;organizationDescription&quot;: &quot;Screen Profile&quot;&#xd;
      },&#xd;
      &quot;capabilityType&quot;: {&#xd;
        &quot;type&quot;: &quot;CRT&quot;&#xd;
      },&#xd;
      &quot;CRT&quot;: true,&#xd;
      &quot;DLT&quot;: true,&#xd;
      &quot;UPDT&quot;: true,&#xd;
      &quot;READ&quot;: true,&#xd;
      &quot;ON&quot;: null,&#xd;
      &quot;orgStructureOId&quot;: 15,&#xd;
      &quot;capabilityOid&quot;: 43,&#xd;
      &quot;isScreenCapability&quot;: true,&#xd;
      &quot;CRT_value&quot;: 43,&#xd;
      &quot;UPDT_value&quot;: 44,&#xd;
      &quot;READ_value&quot;: 45,&#xd;
      &quot;DLT_value&quot;: 46&#xd;
    },&#xd;
    {&#xd;
      &quot;capability&quot;: {&#xd;
        &quot;orgStructureOId&quot;: 15,&#xd;
        &quot;organizationName&quot;: &quot;SCRNPROF&quot;,&#xd;
        &quot;organizationDescription&quot;: &quot;Screen Profile&quot;&#xd;
      },&#xd;
      &quot;capabilityType&quot;: {&#xd;
        &quot;type&quot;: &quot;DLT&quot;&#xd;
      },&#xd;
      &quot;CRT&quot;: true,&#xd;
      &quot;DLT&quot;: true,&#xd;
      &quot;UPDT&quot;: true,&#xd;
      &quot;READ&quot;: true,&#xd;
      &quot;ON&quot;: null,&#xd;
      &quot;orgStructureOId&quot;: 15,&#xd;
      &quot;capabilityOid&quot;: 46,&#xd;
      &quot;isScreenCapability&quot;: true,&#xd;
      &quot;CRT_value&quot;: 43,&#xd;
      &quot;UPDT_value&quot;: 44,&#xd;
      &quot;READ_value&quot;: 45,&#xd;
      &quot;DLT_value&quot;: 46&#xd;
    },&#xd;
    {&#xd;
      &quot;capability&quot;: {&#xd;
        &quot;orgStructureOId&quot;: 15,&#xd;
        &quot;organizationName&quot;: &quot;SCRNPROF&quot;,&#xd;
        &quot;organizationDescription&quot;: &quot;Screen Profile&quot;&#xd;
      },&#xd;
      &quot;capabilityType&quot;: {&#xd;
        &quot;type&quot;: &quot;UPDT&quot;&#xd;
      },&#xd;
      &quot;CRT&quot;: true,&#xd;
      &quot;DLT&quot;: true,&#xd;
      &quot;UPDT&quot;: true,&#xd;
      &quot;READ&quot;: true,&#xd;
      &quot;ON&quot;: null,&#xd;
      &quot;orgStructureOId&quot;: 15,&#xd;
      &quot;capabilityOid&quot;: 44,&#xd;
      &quot;isScreenCapability&quot;: true,&#xd;
      &quot;CRT_value&quot;: 43,&#xd;
      &quot;UPDT_value&quot;: 44,&#xd;
      &quot;READ_value&quot;: 45,&#xd;
      &quot;DLT_value&quot;: 46&#xd;
    },&#xd;
    {&#xd;
      &quot;capability&quot;: {&#xd;
        &quot;orgStructureOId&quot;: 15,&#xd;
        &quot;organizationName&quot;: &quot;SCRNPROF&quot;,&#xd;
        &quot;organizationDescription&quot;: &quot;Screen Profile&quot;&#xd;
      },&#xd;
      &quot;capabilityType&quot;: {&#xd;
        &quot;type&quot;: &quot;READ&quot;&#xd;
      },&#xd;
      &quot;CRT&quot;: true,&#xd;
      &quot;DLT&quot;: true,&#xd;
      &quot;UPDT&quot;: true,&#xd;
      &quot;READ&quot;: true,&#xd;
      &quot;ON&quot;: null,&#xd;
      &quot;orgStructureOId&quot;: 15,&#xd;
      &quot;capabilityOid&quot;: 45,&#xd;
      &quot;isScreenCapability&quot;: true,&#xd;
      &quot;CRT_value&quot;: 43,&#xd;
      &quot;UPDT_value&quot;: 44,&#xd;
      &quot;READ_value&quot;: 45,&#xd;
      &quot;DLT_value&quot;: 46&#xd;
    }&#xd;
  ],&#xd;
  &quot;filterCriteria&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;RECORD_TYPE&quot;,&#xd;
      &quot;value&quot;: &quot;Screen Profile&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;key&quot;: &quot;Screen Profile&quot;,&#xd;
      &quot;value&quot;: &quot;${__RandomString(8,ABCDEFGHIJKLMMNOPQRSTUVWXYZ)}&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">c_ScreenProfileName</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">screenProfileName&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">NA</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get All Capabilities">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/get-all-capabilities</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;screenOrgStructOId&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get Capabilities By Module">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/get-all-capabilities-by-module</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;screenOrgStructOId&quot;: 3&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Screen Profile Enuiry">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/find-screen-enquiry?Screen Profile=${c_ScreenProfileName}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  &quot;${c_ScreenProfileName}&quot;&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Find Screen Profile API">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/find-screen-profile</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;createdTimestamp&quot;: {&#xd;
        &quot;calendarUTC&quot;: {&#xd;
            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
            &quot;firstDayOfWeek&quot;: 0,&#xd;
            &quot;lenient&quot;: true,&#xd;
            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
            &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;timeZone&quot;: {&#xd;
                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                &quot;dstsavings&quot;: 0,&#xd;
                &quot;id&quot;: &quot;string&quot;,&#xd;
                &quot;rawOffset&quot;: 0&#xd;
            },&#xd;
            &quot;weekDateSupported&quot;: true,&#xd;
            &quot;weekYear&quot;: 0,&#xd;
            &quot;weeksInWeekYear&quot;: 0&#xd;
        },&#xd;
        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
        &quot;timeInMillis&quot;: 0,&#xd;
        &quot;xmlgregorianCalendar&quot;: {&#xd;
            &quot;day&quot;: 0,&#xd;
            &quot;eon&quot;: 0,&#xd;
            &quot;eonAndYear&quot;: 0,&#xd;
            &quot;fractionalSecond&quot;: 0,&#xd;
            &quot;hour&quot;: 0,&#xd;
            &quot;millisecond&quot;: 0,&#xd;
            &quot;minute&quot;: 0,&#xd;
            &quot;month&quot;: 0,&#xd;
            &quot;second&quot;: 0,&#xd;
            &quot;timezone&quot;: 0,&#xd;
            &quot;valid&quot;: true,&#xd;
            &quot;xmlschemaType&quot;: {&#xd;
                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                &quot;prefix&quot;: &quot;string&quot;&#xd;
            },&#xd;
            &quot;year&quot;: 0&#xd;
        }&#xd;
    },&#xd;
    &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
    &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
    &quot;includeCapabilities&quot;: true,&#xd;
    &quot;includeRoles&quot;: true,&#xd;
    &quot;lastUpdatedTimestamp&quot;: {&#xd;
        &quot;calendarUTC&quot;: {&#xd;
            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
            &quot;firstDayOfWeek&quot;: 0,&#xd;
            &quot;lenient&quot;: true,&#xd;
            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
            &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;timeZone&quot;: {&#xd;
                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                &quot;dstsavings&quot;: 0,&#xd;
                &quot;id&quot;: &quot;string&quot;,&#xd;
                &quot;rawOffset&quot;: 0&#xd;
            },&#xd;
            &quot;weekDateSupported&quot;: true,&#xd;
            &quot;weekYear&quot;: 0,&#xd;
            &quot;weeksInWeekYear&quot;: 0&#xd;
        },&#xd;
        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
        &quot;timeInMillis&quot;: 0,&#xd;
        &quot;xmlgregorianCalendar&quot;: {&#xd;
            &quot;day&quot;: 0,&#xd;
            &quot;eon&quot;: 0,&#xd;
            &quot;eonAndYear&quot;: 0,&#xd;
            &quot;fractionalSecond&quot;: 0,&#xd;
            &quot;hour&quot;: 0,&#xd;
            &quot;millisecond&quot;: 0,&#xd;
            &quot;minute&quot;: 0,&#xd;
            &quot;month&quot;: 0,&#xd;
            &quot;second&quot;: 0,&#xd;
            &quot;timezone&quot;: 0,&#xd;
            &quot;valid&quot;: true,&#xd;
            &quot;xmlschemaType&quot;: {&#xd;
                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                &quot;prefix&quot;: &quot;string&quot;&#xd;
            },&#xd;
            &quot;year&quot;: 0&#xd;
        }&#xd;
    },&#xd;
    &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
    &quot;module&quot;: {&#xd;
        &quot;createdTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
        &quot;groupId&quot;: 0,&#xd;
        &quot;lastUpdatedTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
        &quot;orderId&quot;: 0,&#xd;
        &quot;orgStructureOId&quot;: 0,&#xd;
        &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
        &quot;organizationName&quot;: &quot;string&quot;,&#xd;
        &quot;parentOrgStructureOid&quot;: 0,&#xd;
        &quot;uilastUpdatedTime&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        }&#xd;
    },&#xd;
    &quot;role&quot;: {&#xd;
        &quot;allowChangesToOwnRecord&quot;: true,&#xd;
        &quot;createdTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
        &quot;landingPage&quot;: {&#xd;
            &quot;createdTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;lastUpdatedTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
            &quot;orderId&quot;: 0,&#xd;
            &quot;orgStructureOId&quot;: 0,&#xd;
            &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
            &quot;organizationName&quot;: &quot;string&quot;,&#xd;
            &quot;parentOrgStructureOid&quot;: 0,&#xd;
            &quot;uilastUpdatedTime&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        &quot;lastUpdatedTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
        &quot;roleDescription&quot;: &quot;string&quot;,&#xd;
        &quot;roleName&quot;: &quot;string&quot;,&#xd;
        &quot;screenProfileName&quot;: &quot;string&quot;,&#xd;
        &quot;uilastUpdatedTime&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        }&#xd;
    },&#xd;
    &quot;screen&quot;: {&#xd;
        &quot;createdTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
        &quot;groupId&quot;: 0,&#xd;
        &quot;lastUpdatedTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
        &quot;orderId&quot;: 0,&#xd;
        &quot;orgStructureOId&quot;: 0,&#xd;
        &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
        &quot;organizationName&quot;: &quot;string&quot;,&#xd;
        &quot;parentOrgStructureOid&quot;: 0,&#xd;
        &quot;uilastUpdatedTime&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        }&#xd;
    },&#xd;
    &quot;screenProfile&quot;: {&#xd;
        &quot;capabilityMappings&quot;: [&#xd;
            {&#xd;
                &quot;capability&quot;: {&#xd;
                    &quot;createdTimestamp&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    },&#xd;
                    &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
                    &quot;groupId&quot;: 0,&#xd;
                    &quot;lastUpdatedTimestamp&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    },&#xd;
                    &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
                    &quot;orderId&quot;: 0,&#xd;
                    &quot;orgStructureOId&quot;: 0,&#xd;
                    &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
                    &quot;organizationName&quot;: &quot;string&quot;,&#xd;
                    &quot;parentOrgStructureOid&quot;: 0,&#xd;
                    &quot;uilastUpdatedTime&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;capabilityOid&quot;: 0,&#xd;
                &quot;capabilityType&quot;: {&#xd;
                    &quot;description&quot;: &quot;string&quot;,&#xd;
                    &quot;type&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;createdTimestamp&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                },&#xd;
                &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
                &quot;lastUpdatedTimestamp&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                },&#xd;
                &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
                &quot;screenProfileName&quot;: &quot;string&quot;,&#xd;
                &quot;subCategory&quot;: &quot;string&quot;,&#xd;
                &quot;uilastUpdatedTime&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;createdTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
        &quot;description&quot;: &quot;string&quot;,&#xd;
        &quot;domainObjectKey&quot;: {&#xd;
            &quot;businessObjectKey&quot;: &quot;string&quot;,&#xd;
            &quot;domainObjectKey&quot;: &quot;string&quot;,&#xd;
            &quot;tableName&quot;: &quot;string&quot;&#xd;
        },&#xd;
        &quot;filterCriteria&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;string&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;lastUpdatedTimestamp&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        },&#xd;
        &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
        &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
        &quot;module&quot;: {&#xd;
            &quot;createdTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;lastUpdatedTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
            &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
            &quot;orderId&quot;: 0,&#xd;
            &quot;orgStructureOId&quot;: 0,&#xd;
            &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
            &quot;organizationName&quot;: &quot;string&quot;,&#xd;
            &quot;parentOrgStructureOid&quot;: 0,&#xd;
            &quot;uilastUpdatedTime&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.582Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        &quot;screenProfileName&quot;: &quot;string&quot;,&#xd;
        &quot;screenType&quot;: {&#xd;
            &quot;createdTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
            &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
            &quot;groupId&quot;: 0,&#xd;
            &quot;lastUpdatedTimestamp&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            },&#xd;
            &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
            &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
            &quot;orderId&quot;: 0,&#xd;
            &quot;orgStructureOId&quot;: 0,&#xd;
            &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
            &quot;organizationName&quot;: &quot;string&quot;,&#xd;
            &quot;parentOrgStructureOid&quot;: 0,&#xd;
            &quot;uilastUpdatedTime&quot;: {&#xd;
                &quot;calendarUTC&quot;: {&#xd;
                    &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                    &quot;firstDayOfWeek&quot;: 0,&#xd;
                    &quot;lenient&quot;: true,&#xd;
                    &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                    &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;timeZone&quot;: {&#xd;
                        &quot;displayName&quot;: &quot;string&quot;,&#xd;
                        &quot;dstsavings&quot;: 0,&#xd;
                        &quot;id&quot;: &quot;string&quot;,&#xd;
                        &quot;rawOffset&quot;: 0&#xd;
                    },&#xd;
                    &quot;weekDateSupported&quot;: true,&#xd;
                    &quot;weekYear&quot;: 0,&#xd;
                    &quot;weeksInWeekYear&quot;: 0&#xd;
                },&#xd;
                &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;xmlgregorianCalendar&quot;: {&#xd;
                    &quot;day&quot;: 0,&#xd;
                    &quot;eon&quot;: 0,&#xd;
                    &quot;eonAndYear&quot;: 0,&#xd;
                    &quot;fractionalSecond&quot;: 0,&#xd;
                    &quot;hour&quot;: 0,&#xd;
                    &quot;millisecond&quot;: 0,&#xd;
                    &quot;minute&quot;: 0,&#xd;
                    &quot;month&quot;: 0,&#xd;
                    &quot;second&quot;: 0,&#xd;
                    &quot;timezone&quot;: 0,&#xd;
                    &quot;valid&quot;: true,&#xd;
                    &quot;xmlschemaType&quot;: {&#xd;
                        &quot;localPart&quot;: &quot;string&quot;,&#xd;
                        &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                        &quot;prefix&quot;: &quot;string&quot;&#xd;
                    },&#xd;
                    &quot;year&quot;: 0&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        &quot;selectedRoles&quot;: [&#xd;
            {&#xd;
                &quot;allowChangesToOwnRecord&quot;: true,&#xd;
                &quot;createdTimestamp&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                },&#xd;
                &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
                &quot;landingPage&quot;: {&#xd;
                    &quot;createdTimestamp&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    },&#xd;
                    &quot;createdTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                    &quot;createdUserId&quot;: &quot;string&quot;,&#xd;
                    &quot;groupId&quot;: 0,&#xd;
                    &quot;lastUpdatedTimestamp&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    },&#xd;
                    &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                    &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
                    &quot;orderId&quot;: 0,&#xd;
                    &quot;orgStructureOId&quot;: 0,&#xd;
                    &quot;organizationDescription&quot;: &quot;string&quot;,&#xd;
                    &quot;organizationName&quot;: &quot;string&quot;,&#xd;
                    &quot;parentOrgStructureOid&quot;: 0,&#xd;
                    &quot;uilastUpdatedTime&quot;: {&#xd;
                        &quot;calendarUTC&quot;: {&#xd;
                            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                            &quot;firstDayOfWeek&quot;: 0,&#xd;
                            &quot;lenient&quot;: true,&#xd;
                            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                            &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                            &quot;timeInMillis&quot;: 0,&#xd;
                            &quot;timeZone&quot;: {&#xd;
                                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                                &quot;dstsavings&quot;: 0,&#xd;
                                &quot;id&quot;: &quot;string&quot;,&#xd;
                                &quot;rawOffset&quot;: 0&#xd;
                            },&#xd;
                            &quot;weekDateSupported&quot;: true,&#xd;
                            &quot;weekYear&quot;: 0,&#xd;
                            &quot;weeksInWeekYear&quot;: 0&#xd;
                        },&#xd;
                        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;xmlgregorianCalendar&quot;: {&#xd;
                            &quot;day&quot;: 0,&#xd;
                            &quot;eon&quot;: 0,&#xd;
                            &quot;eonAndYear&quot;: 0,&#xd;
                            &quot;fractionalSecond&quot;: 0,&#xd;
                            &quot;hour&quot;: 0,&#xd;
                            &quot;millisecond&quot;: 0,&#xd;
                            &quot;minute&quot;: 0,&#xd;
                            &quot;month&quot;: 0,&#xd;
                            &quot;second&quot;: 0,&#xd;
                            &quot;timezone&quot;: 0,&#xd;
                            &quot;valid&quot;: true,&#xd;
                            &quot;xmlschemaType&quot;: {&#xd;
                                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                                &quot;prefix&quot;: &quot;string&quot;&#xd;
                            },&#xd;
                            &quot;year&quot;: 0&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;lastUpdatedTimestamp&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                },&#xd;
                &quot;lastUpdatedTimestampDateObj&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                &quot;lastUpdatedUserId&quot;: &quot;string&quot;,&#xd;
                &quot;roleDescription&quot;: &quot;string&quot;,&#xd;
                &quot;roleName&quot;: &quot;string&quot;,&#xd;
                &quot;screenProfileName&quot;: &quot;string&quot;,&#xd;
                &quot;uilastUpdatedTime&quot;: {&#xd;
                    &quot;calendarUTC&quot;: {&#xd;
                        &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                        &quot;firstDayOfWeek&quot;: 0,&#xd;
                        &quot;lenient&quot;: true,&#xd;
                        &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                        &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                        &quot;timeInMillis&quot;: 0,&#xd;
                        &quot;timeZone&quot;: {&#xd;
                            &quot;displayName&quot;: &quot;string&quot;,&#xd;
                            &quot;dstsavings&quot;: 0,&#xd;
                            &quot;id&quot;: &quot;string&quot;,&#xd;
                            &quot;rawOffset&quot;: 0&#xd;
                        },&#xd;
                        &quot;weekDateSupported&quot;: true,&#xd;
                        &quot;weekYear&quot;: 0,&#xd;
                        &quot;weeksInWeekYear&quot;: 0&#xd;
                    },&#xd;
                    &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
                    &quot;timeInMillis&quot;: 0,&#xd;
                    &quot;xmlgregorianCalendar&quot;: {&#xd;
                        &quot;day&quot;: 0,&#xd;
                        &quot;eon&quot;: 0,&#xd;
                        &quot;eonAndYear&quot;: 0,&#xd;
                        &quot;fractionalSecond&quot;: 0,&#xd;
                        &quot;hour&quot;: 0,&#xd;
                        &quot;millisecond&quot;: 0,&#xd;
                        &quot;minute&quot;: 0,&#xd;
                        &quot;month&quot;: 0,&#xd;
                        &quot;second&quot;: 0,&#xd;
                        &quot;timezone&quot;: 0,&#xd;
                        &quot;valid&quot;: true,&#xd;
                        &quot;xmlschemaType&quot;: {&#xd;
                            &quot;localPart&quot;: &quot;string&quot;,&#xd;
                            &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                            &quot;prefix&quot;: &quot;string&quot;&#xd;
                        },&#xd;
                        &quot;year&quot;: 0&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;uilastUpdatedTime&quot;: {&#xd;
            &quot;calendarUTC&quot;: {&#xd;
                &quot;calendarType&quot;: &quot;string&quot;,&#xd;
                &quot;firstDayOfWeek&quot;: 0,&#xd;
                &quot;lenient&quot;: true,&#xd;
                &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
                &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
                &quot;timeInMillis&quot;: 0,&#xd;
                &quot;timeZone&quot;: {&#xd;
                    &quot;displayName&quot;: &quot;string&quot;,&#xd;
                    &quot;dstsavings&quot;: 0,&#xd;
                    &quot;id&quot;: &quot;string&quot;,&#xd;
                    &quot;rawOffset&quot;: 0&#xd;
                },&#xd;
                &quot;weekDateSupported&quot;: true,&#xd;
                &quot;weekYear&quot;: 0,&#xd;
                &quot;weeksInWeekYear&quot;: 0&#xd;
            },&#xd;
            &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;xmlgregorianCalendar&quot;: {&#xd;
                &quot;day&quot;: 0,&#xd;
                &quot;eon&quot;: 0,&#xd;
                &quot;eonAndYear&quot;: 0,&#xd;
                &quot;fractionalSecond&quot;: 0,&#xd;
                &quot;hour&quot;: 0,&#xd;
                &quot;millisecond&quot;: 0,&#xd;
                &quot;minute&quot;: 0,&#xd;
                &quot;month&quot;: 0,&#xd;
                &quot;second&quot;: 0,&#xd;
                &quot;timezone&quot;: 0,&#xd;
                &quot;valid&quot;: true,&#xd;
                &quot;xmlschemaType&quot;: {&#xd;
                    &quot;localPart&quot;: &quot;string&quot;,&#xd;
                    &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                    &quot;prefix&quot;: &quot;string&quot;&#xd;
                },&#xd;
                &quot;year&quot;: 0&#xd;
            }&#xd;
        }&#xd;
    },&#xd;
    &quot;uilastUpdatedTime&quot;: {&#xd;
        &quot;calendarUTC&quot;: {&#xd;
            &quot;calendarType&quot;: &quot;string&quot;,&#xd;
            &quot;firstDayOfWeek&quot;: 0,&#xd;
            &quot;lenient&quot;: true,&#xd;
            &quot;minimalDaysInFirstWeek&quot;: 0,&#xd;
            &quot;time&quot;: &quot;2024-05-14T12:10:02.583Z&quot;,&#xd;
            &quot;timeInMillis&quot;: 0,&#xd;
            &quot;timeZone&quot;: {&#xd;
                &quot;displayName&quot;: &quot;string&quot;,&#xd;
                &quot;dstsavings&quot;: 0,&#xd;
                &quot;id&quot;: &quot;string&quot;,&#xd;
                &quot;rawOffset&quot;: 0&#xd;
            },&#xd;
            &quot;weekDateSupported&quot;: true,&#xd;
            &quot;weekYear&quot;: 0,&#xd;
            &quot;weeksInWeekYear&quot;: 0&#xd;
        },&#xd;
        &quot;serviceUTCString&quot;: &quot;string&quot;,&#xd;
        &quot;timeInMillis&quot;: 0,&#xd;
        &quot;xmlgregorianCalendar&quot;: {&#xd;
            &quot;day&quot;: 0,&#xd;
            &quot;eon&quot;: 0,&#xd;
            &quot;eonAndYear&quot;: 0,&#xd;
            &quot;fractionalSecond&quot;: 0,&#xd;
            &quot;hour&quot;: 0,&#xd;
            &quot;millisecond&quot;: 0,&#xd;
            &quot;minute&quot;: 0,&#xd;
            &quot;month&quot;: 0,&#xd;
            &quot;second&quot;: 0,&#xd;
            &quot;timezone&quot;: 0,&#xd;
            &quot;valid&quot;: true,&#xd;
            &quot;xmlschemaType&quot;: {&#xd;
                &quot;localPart&quot;: &quot;string&quot;,&#xd;
                &quot;namespaceURI&quot;: &quot;string&quot;,&#xd;
                &quot;prefix&quot;: &quot;string&quot;&#xd;
            },&#xd;
            &quot;year&quot;: 0&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Screen Profile Lookup (Get Screen Profiles)">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/lookup?=</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Screen Profile Health Check">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/actuator/health</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-750238351">&quot;status&quot;:&quot;UP&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get Organisation Details">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/crewpro/core/fndn/security/screen/prof/manage/v1.0/organization-profile?groupId=1</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Delete Screen Profile">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">${p_Url}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">https://pstupqacus01.pstechnology.com/crewpro/core/fndn/security/screen/prof/manage/v1.0/delete-screen-profile/${c_ScreenProfileName}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timezone</stringProp>
                  <stringProp name="Header.value">Etc/UTC</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1039649098">&quot;result&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
